name: Master CD

on:
  push:
    branches: 
      - master

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          # Provided by actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build_and_upload:
    needs: [create_release]
    strategy:
      matrix:
        osarch: [win-x64, linux-x64, osx-x64]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100
    - name: Build with dotnet
      run: dotnet publish -r ${{ matrix.osarch }} -c Release -o dist-${{ matrix.osarch }} /p:PublishSingleFile=true
    - name: Place example config
      run: cp .config.example.json dist-${{ matrix.osarch }}/.config.json
    - name: Zip release
      run: zip -r release.${{ github.sha }}-${{ matrix.osarch }}.zip dist-${{ matrix.osarch }}
    - name: Upload Release Artifact
      id: upload_release_artifact
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./release.${{ github.sha }}-${{ matrix.osarch }}.zip
        asset_name: release-${{ matrix.osarch }}.zip
        asset_content_type: application/zip
